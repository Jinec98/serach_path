本程序为“最短路径求取动态演示”所开发


对于本程序：

	运用深度优先搜索算法（DFS）、广度优先搜索算法（BFS）、基于曼哈顿距离的启发式搜索算法（Astar）、基于曼哈顿距离的迭代加深启发式搜索算法（IDAstar），
可在迷宫中搜索从起点到终点的路径，并显示搜索的步骤及最佳路径。
	在数据结构方面，运用了链表、栈、队列、树、STL（list、vector、stack、queue）等相关知识；
	在C++方面，体现继承、封装、多态的思想，运用了多文件部署、内部类、纯虚函数、拷贝构造函数、运算符重载、内联函数、文件输入输出流、指针与引用等相关知识；
	在QT方面，运用了窗口、布局、控件、信号槽、对话框、多线程等相关知识。

	由于迷宫的大小规模未知，窗口界面大小为算法计算得出，因此在迷宫规模为5*5-30*30下程序显示最佳。
	注意：迷宫最大规模不可超过50*50。
	若是第一次运行本程序，建议先点击“帮助”了解程序的相关操作。点击“关于”可查看本程序类图与源码。


程序基本流程：

	创建迷宫/生成迷宫->打开文件->设置显示速度->设置搜索算法->寻找路径->得到最短路径->保存文件
	（程序根目录下 / test中含有迷宫测试样例，若直接打开可跳过“创建迷宫”或“生成迷宫”）


本程序基本说明：

1、点击“创建迷宫”	进入迷宫创造界面
	输入所创造的迷宫的行列及名称，迷宫最大规模不可超过50*50，在迷宫创建界面中通过鼠标点击创建迷宫，最终选择目录保存文件。
	保存的文件为本程序可识别的txt文本，可用于后续“打开文件”使用。
2、点击“生成迷宫”	选择需要自动生成的迷宫规模
	本程序应用DFS算法自动生成存在唯一路径的迷宫，自定义迷宫规模应在49*49以内，选择目录保存文件即可。
	保存的文件为本程序可识别的txt文本，可用于后续“打开文件”使用。
3、点击“打开文件”	打开“.txt”文本文件
	该文件内容的格式为：第一行：两个数字m、n，分别表示迷宫的行与列。
	余下m行：每行n个字符，表示迷宫中坐标为（m，n）的地方的状态。
	其中：“ ”（一个空格）表示可行路径、“X”（大写英文字母X）表示墙（不可行走）、“S”表示起点、“D”表示终点。
	注意：迷宫的最适规模为5*5-30*30，在此情况下程序显示的最为清晰。迷宫最大规模不可超过50*50。
4、滑动“显示速度”拉杆	速度范围（0-500ms）
	可调节每一步骤显示的速度。如果迷宫规模较大，建议将速度初始值先调大。
5、设置“搜索算法”	工具栏最后一项
	共有四种算法可供选择：深度优先搜索（DFS）、广度优先搜索（BFS）、启发式搜索（Astar）、迭代加深启发式搜索（IDAstar）。
6、点击“寻找路径”	需先打开文件
	可通过设置好的算法在迷宫中逐步寻找从起点到终点的路径。
	探寻的方向为右→、上↑、左←、下↓，若无可行路径则会弹出消息提示。
7、点击“得到路径”	需先寻找路径
	可显示通过之前的寻找而得到的最佳路径。
8、点击“保存文件”	需先得到路径
	可将程序的运行结果保存至文本文件中，该文件保存在之前打开的文件的目录下，命名为“算法名称_打开的文件名称”。"
	该文件的内容的格式为：
	前m行：每行n个字符表示迷宫，其中“*”表示从起点到终点的最佳路径。
	下一行：显示该路径的步数step。
	余下step行：显示从起点到终点的路径的坐标。
9、点击“关于”		查看本程序类图与源码
	可通过鼠标拖拽、鼠标滚轮滑动，调整类图。


如遇BUG可与我联系
作者：@Jinec	QQ：389468296